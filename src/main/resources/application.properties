# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error = false
#spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/workingdiary?serverTimezone=UTC

#���Կ�
#spring.datasource.url = jdbc:mysql://localhost:3306/student_db?serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = root@123
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource

#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#mybatis.configuration.cache-enabled=false
#spring.datasource.name= druid

mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.config-location=classpath:config/mybatis-config.xml
mybatis.type-aliases-package=com.iscas.workingdiary.bean

repchain.host=192.168.100.174:8081
repchain.chaincodeId=61251ffbe41e3d3531b89403e40f4d8c4f9e6b62107a8dafd7a46adddcd81403
repchain.diary.prefix=DIARY_
repchain.credit.prefix=CREDIT_

http.header.authorization=Authorization

#个人电脑环境
#cer.path=G:/workingdiary/cer
#jks.path=G:/workingdiary/jks

#办公环境
cer.path=F:/workingdiary/user_jks/certs
jks.path=F:/workingdiary/user_jks

# Single file max size
multipart.maxFileSize=3Mb
# All files max size
#multipart.maxRequestSize=5Mb

#编码格式
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

# LOGGING
#logging.config= # Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.file= # Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.
#logging.file.max-history=0 # Maximum of archive log files to keep. Only supported with the default logback setup.
#logging.file.max-size=10MB # Maximum log file size. Only supported with the default logback setup.
#logging.group.*= # Log groups to quickly change multiple loggers at the same time. For instance, `logging.level.db=org.hibernate,org.springframework.jdbc`.
#logging.level.*= # Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`.
#logging.path= # Location of the log file. For instance, `/var/log`.
#logging.pattern.console= # Appender pattern for output to the console. Supported only with the default Logback setup.
#logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS # Appender pattern for log date format. Supported only with the default Logback setup.
#logging.pattern.file= # Appender pattern for output to a file. Supported only with the default Logback setup.
#logging.pattern.level=%5p # Appender pattern for log level. Supported only with the default Logback setup.
#logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.

# HTTP (HttpProperties)
#spring.http.converters.preferred-json-mapper= # Preferred JSON mapper to use for HTTP message conversion. By default, auto-detected according to the environment.
#spring.http.encoding.charset=UTF-8 # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
#spring.http.encoding.enabled=true # Whether to enable http encoding support.
#spring.http.encoding.force= # Whether to force the encoding to the configured charset on HTTP requests and responses.
#spring.http.encoding.force-request= # Whether to force the encoding to the configured charset on HTTP requests. Defaults to true when "force" has not been specified.
#spring.http.encoding.force-response= # Whether to force the encoding to the configured charset on HTTP responses.
#spring.http.encoding.mapping= # Locale in which to encode mapping.
#spring.http.log-request-details=false # Whether logging of (potentially sensitive) request details at DEBUG and TRACE level is allowed.




# REDIS (RedisProperties)
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.database=0 # Database index used by the connection factory.
#spring.redis.url= # Connection URL. Overrides host, port, and password. User is ignored. Example: redis://user:password@example.com:6379
#spring.redis.host=localhost # Redis server host.
#spring.redis.jedis.pool.max-active=8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.jedis.pool.max-idle=8 # Maximum number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.jedis.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.jedis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.lettuce.pool.max-active=8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.lettuce.pool.max-idle=8 # Maximum number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.lettuce.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.lettuce.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.lettuce.shutdown-timeout=100ms # Shutdown timeout.
#spring.redis.password= # Login password of the redis server.
#spring.redis.port=6379 # Redis server port.
#spring.redis.sentinel.master= # Name of the Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of "host:port" pairs.
#spring.redis.ssl=false # Whether to enable SSL support.
#spring.redis.timeout= # Connection timeout.


# MANAGEMENT HTTP SERVER (ManagementServerProperties)
#management.server.add-application-context-header=false # Add the "X-Application-Context" HTTP header in each response.
#management.server.address= # Network address to which the management endpoints should bind. Requires a custom management.server.port.
#management.server.port= # Management endpoint HTTP port (uses the same port as the application by default). Configure a different port to use management-specific SSL.
#management.server.servlet.context-path= # Management endpoint context-path (for instance, `/management`). Requires a custom management.server.port.
#management.server.ssl.ciphers= # Supported SSL ciphers.
#management.server.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store.
#management.server.ssl.enabled=true # Whether to enable SSL support.
#management.server.ssl.enabled-protocols= # Enabled SSL protocols.
#management.server.ssl.key-alias= # Alias that identifies the key in the key store.
#management.server.ssl.key-password= # Password used to access the key in the key store.
#management.server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).
#management.server.ssl.key-store-password= # Password used to access the key store.
#management.server.ssl.key-store-provider= # Provider for the key store.
#management.server.ssl.key-store-type= # Type of the key store.
#management.server.ssl.protocol=TLS # SSL protocol to use.
#management.server.ssl.trust-store= # Trust store that holds SSL certificates.
#management.server.ssl.trust-store-password= # Password used to access the trust store.
#management.server.ssl.trust-store-provider= # Provider for the trust store.
#management.server.ssl.trust-store-type= # Type of the trust store.

